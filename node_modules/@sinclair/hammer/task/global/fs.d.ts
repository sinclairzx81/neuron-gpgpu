/// <reference types="node" />
import * as fs from 'fs';
export declare const appendFile: typeof fs.appendFile.__promisify__;
export declare const access: typeof fs.access.__promisify__;
export declare const close: typeof fs.close.__promisify__;
export declare const copyFile: typeof fs.copyFile.__promisify__;
export declare const exists: typeof fs.exists.__promisify__;
export declare const mkdir: typeof fs.mkdir.__promisify__;
export declare const open: typeof fs.open.__promisify__;
export declare const readdir: typeof fs.readdir.__promisify__;
export declare const read: typeof fs.read.__promisify__;
export declare const readFile: typeof fs.readFile.__promisify__;
export declare const stat: typeof fs.stat.__promisify__;
export declare const truncate: typeof fs.truncate.__promisify__;
export declare const rename: typeof fs.rename.__promisify__;
export declare const unlink: typeof fs.unlink.__promisify__;
export declare const write: typeof fs.write.__promisify__;
export declare const writeFile: typeof fs.writeFile.__promisify__;
/** Recursive rm. By default. */
export declare const rm: (path: string, options: {
    recursive: boolean;
    force: boolean;
}) => Promise<any>;
