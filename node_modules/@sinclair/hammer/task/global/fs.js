"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.rm = exports.writeFile = exports.write = exports.unlink = exports.rename = exports.truncate = exports.stat = exports.readFile = exports.read = exports.readdir = exports.open = exports.mkdir = exports.exists = exports.copyFile = exports.close = exports.access = exports.appendFile = void 0;
const supports_1 = require("./supports/supports");
const fs = require("fs");
const util = require("util");
// -------------------------------------------------------
// node 12
// -------------------------------------------------------
exports.appendFile = util.promisify(fs.appendFile);
exports.access = util.promisify(fs.access);
exports.close = util.promisify(fs.close);
exports.copyFile = util.promisify(fs.copyFile);
exports.exists = util.promisify(fs.exists);
exports.mkdir = util.promisify(fs.mkdir);
exports.open = util.promisify(fs.open);
exports.readdir = util.promisify(fs.readdir);
exports.read = util.promisify(fs.read);
exports.readFile = util.promisify(fs.readFile);
exports.stat = util.promisify(fs.stat);
exports.truncate = util.promisify(fs.truncate);
exports.rename = util.promisify(fs.rename);
exports.unlink = util.promisify(fs.unlink);
exports.write = util.promisify(fs.write);
exports.writeFile = util.promisify(fs.writeFile);
// ------------------------------------------------
// node 12+
// ------------------------------------------------
/** Recursive rm. By default. */
const rm = async (path, options) => {
    if (!fs.existsSync(path))
        return;
    const stat = fs.statSync(path);
    if (stat.isFile())
        return await exports.unlink(path);
    await supports_1.folder_delete(path);
};
exports.rm = rm;
